"""
–ú–æ–¥—É–ª—å –∫–ª–∞–≤–∏–∞—Ç—É—Ä –¥–ª—è Telegram –±–æ—Ç–∞
"""
from telegram import ReplyKeyboardMarkup, InlineKeyboardButton, InlineKeyboardMarkup
from typing import List, Optional


class KeyboardBuilder:
    """–ö–ª–∞—Å—Å –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è –∫–ª–∞–≤–∏–∞—Ç—É—Ä"""

    @staticmethod
    def get_main_menu_keyboard() -> ReplyKeyboardMarkup:
        """
        –ì–ª–∞–≤–Ω–∞—è Reply –∫–ª–∞–≤–∏–∞—Ç—É—Ä–∞ (–ø–æ—Å—Ç–æ—è–Ω–Ω–∞—è –ø–∞–Ω–µ–ª—å)
        """
        keyboard = [
            ['üìã –°–µ–≥–æ–¥–Ω—è', 'üìÖ –ù–µ–¥–µ–ª—è'],
            ['‚úÖ –í—Å–µ –∑–∞–¥–∞—á–∏', 'üìÇ –ö–∞—Ç–µ–≥–æ—Ä–∏–∏'],
            ['‚öôÔ∏è –ù–∞—Å—Ç—Ä–æ–π–∫–∏', '‚ùì –ü–æ–º–æ—â—å']
        ]
        return ReplyKeyboardMarkup(
            keyboard,
            resize_keyboard=True,
            one_time_keyboard=False
        )

    @staticmethod
    def get_task_actions_keyboard(task_id: int) -> InlineKeyboardMarkup:
        """
        Inline –∫–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –¥–ª—è –¥–µ–π—Å—Ç–≤–∏–π —Å –∑–∞–¥–∞—á–µ–π

        Args:
            task_id: ID –∑–∞–¥–∞—á–∏
        """
        keyboard = [
            [
                InlineKeyboardButton("‚úÖ –í—ã–ø–æ–ª–Ω–µ–Ω–æ", callback_data=f"task_done:{task_id}"),
                InlineKeyboardButton("‚úèÔ∏è –ò–∑–º–µ–Ω–∏—Ç—å", callback_data=f"task_edit:{task_id}")
            ],
            [
                InlineKeyboardButton("üîî –û—Ç–ª–æ–∂–∏—Ç—å 15–º", callback_data=f"task_snooze:{task_id}:15"),
                InlineKeyboardButton("üîî –û—Ç–ª–æ–∂–∏—Ç—å 1—á", callback_data=f"task_snooze:{task_id}:60")
            ],
            [
                InlineKeyboardButton("üóë –£–¥–∞–ª–∏—Ç—å", callback_data=f"task_delete:{task_id}")
            ]
        ]
        return InlineKeyboardMarkup(keyboard)

    @staticmethod
    def get_task_list_keyboard(tasks: List[tuple]) -> InlineKeyboardMarkup:
        """
        Inline –∫–ª–∞–≤–∏–∞—Ç—É—Ä–∞ —Å–æ —Å–ø–∏—Å–∫–æ–º –∑–∞–¥–∞—á

        Args:
            tasks: –°–ø–∏—Å–æ–∫ –∑–∞–¥–∞—á –∏–∑ –ë–î (tuples)
        """
        keyboard = []
        for task in tasks:
            task_id = task[0]
            title = task[2][:40]  # –û–≥—Ä–∞–Ω–∏—á–∏–≤–∞–µ–º –¥–ª–∏–Ω—É

            keyboard.append([
                InlineKeyboardButton(f"‚úÖ {title}", callback_data=f"task_done:{task_id}"),
                InlineKeyboardButton("üëÅ", callback_data=f"task_view:{task_id}")
            ])

        return InlineKeyboardMarkup(keyboard)

    @staticmethod
    def get_categories_keyboard(categories: List[tuple]) -> InlineKeyboardMarkup:
        """
        Inline –∫–ª–∞–≤–∏–∞—Ç—É—Ä–∞ —Å –∫–∞—Ç–µ–≥–æ—Ä–∏—è–º–∏

        Args:
            categories: –°–ø–∏—Å–æ–∫ –∫–∞—Ç–µ–≥–æ—Ä–∏–π –∏–∑ –ë–î (id, name, color)
        """
        keyboard = []
        row = []

        for i, cat in enumerate(categories):
            cat_id, name, color = cat
            row.append(InlineKeyboardButton(
                f"{color} {name.title()}",
                callback_data=f"category_view:{name}"
            ))

            # –ü–æ 2 –∫–Ω–æ–ø–∫–∏ –≤ —Ä—è–¥—É
            if len(row) == 2:
                keyboard.append(row)
                row = []

        # –î–æ–±–∞–≤–∏—Ç—å –æ—Å—Ç–∞—Ç–æ–∫
        if row:
            keyboard.append(row)

        # –ö–Ω–æ–ø–∫–∞ "–í—Å–µ –∑–∞–¥–∞—á–∏"
        keyboard.append([
            InlineKeyboardButton("üìã –í—Å–µ –∑–∞–¥–∞—á–∏", callback_data="category_view:all")
        ])

        return InlineKeyboardMarkup(keyboard)

    @staticmethod
    def get_priority_keyboard() -> InlineKeyboardMarkup:
        """
        –ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –≤—ã–±–æ—Ä–∞ –ø—Ä–∏–æ—Ä–∏—Ç–µ—Ç–∞
        """
        keyboard = [
            [
                InlineKeyboardButton("üî¥ –í—ã—Å–æ–∫–∏–π", callback_data="priority:high"),
                InlineKeyboardButton("üü° –°—Ä–µ–¥–Ω–∏–π", callback_data="priority:medium"),
                InlineKeyboardButton("üü¢ –ù–∏–∑–∫–∏–π", callback_data="priority:low")
            ]
        ]
        return InlineKeyboardMarkup(keyboard)

    @staticmethod
    def get_snooze_keyboard(task_id: int) -> InlineKeyboardMarkup:
        """
        –ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –¥–ª—è –æ—Ç–ª–æ–∂–µ–Ω–∏—è –Ω–∞–ø–æ–º–∏–Ω–∞–Ω–∏—è

        Args:
            task_id: ID –∑–∞–¥–∞—á–∏
        """
        keyboard = [
            [
                InlineKeyboardButton("15 –º–∏–Ω—É—Ç", callback_data=f"task_snooze:{task_id}:15"),
                InlineKeyboardButton("30 –º–∏–Ω—É—Ç", callback_data=f"task_snooze:{task_id}:30")
            ],
            [
                InlineKeyboardButton("1 —á–∞—Å", callback_data=f"task_snooze:{task_id}:60"),
                InlineKeyboardButton("3 —á–∞—Å–∞", callback_data=f"task_snooze:{task_id}:180")
            ],
            [
                InlineKeyboardButton("–ó–∞–≤—Ç—Ä–∞", callback_data=f"task_snooze:{task_id}:1440")
            ]
        ]
        return InlineKeyboardMarkup(keyboard)

    @staticmethod
    def get_confirmation_keyboard(action: str, item_id: int) -> InlineKeyboardMarkup:
        """
        –ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è –¥–µ–π—Å—Ç–≤–∏—è

        Args:
            action: –¢–∏–ø –¥–µ–π—Å—Ç–≤–∏—è (delete, reset, etc.)
            item_id: ID —ç–ª–µ–º–µ–Ω—Ç–∞
        """
        keyboard = [
            [
                InlineKeyboardButton("‚úÖ –î–∞", callback_data=f"confirm:{action}:{item_id}"),
                InlineKeyboardButton("‚ùå –ù–µ—Ç", callback_data=f"cancel:{action}")
            ]
        ]
        return InlineKeyboardMarkup(keyboard)

    @staticmethod
    def get_settings_keyboard() -> InlineKeyboardMarkup:
        """
        –ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –Ω–∞—Å—Ç—Ä–æ–µ–∫
        """
        keyboard = [
            [
                InlineKeyboardButton("üîî –ù–∞–ø–æ–º–∏–Ω–∞–Ω–∏—è", callback_data="settings_reminders")
            ],
            [
                InlineKeyboardButton("üìÇ –ö–∞—Ç–µ–≥–æ—Ä–∏–∏", callback_data="settings_categories")
            ],
            [
                InlineKeyboardButton("‚è∞ –í—Ä–µ–º—è —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π", callback_data="settings_time")
            ],
            [
                InlineKeyboardButton("¬´ –ù–∞–∑–∞–¥", callback_data="settings_back")
            ]
        ]
        return InlineKeyboardMarkup(keyboard)

    @staticmethod
    def get_reminder_settings_keyboard() -> InlineKeyboardMarkup:
        """
        –ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –Ω–∞—Å—Ç—Ä–æ–µ–∫ –Ω–∞–ø–æ–º–∏–Ω–∞–Ω–∏–π
        """
        keyboard = [
            [
                InlineKeyboardButton("üåÖ –£—Ç—Ä–µ–Ω–Ω–∏–µ –Ω–∞–ø–æ–º–∏–Ω–∞–Ω–∏—è", callback_data="reminder_morning")
            ],
            [
                InlineKeyboardButton("üìÖ –ù–∞–ø–æ–º–∏–Ω–∞–Ω–∏—è –æ –¥–µ–¥–ª–∞–π–Ω–∞—Ö", callback_data="reminder_deadline")
            ],
            [
                InlineKeyboardButton("‚è± –í—Ä–µ–º–µ–Ω–Ω—ã–µ –Ω–∞–ø–æ–º–∏–Ω–∞–Ω–∏—è", callback_data="reminder_timed")
            ],
            [
                InlineKeyboardButton("¬´ –ù–∞–∑–∞–¥", callback_data="settings_back")
            ]
        ]
        return InlineKeyboardMarkup(keyboard)

    @staticmethod
    def get_back_button(callback_data: str = "back") -> InlineKeyboardMarkup:
        """
        –ü—Ä–æ—Å—Ç–∞—è –∫–Ω–æ–ø–∫–∞ "–ù–∞–∑–∞–¥"

        Args:
            callback_data: Callback –¥–∞–Ω–Ω—ã–µ –¥–ª—è –∫–Ω–æ–ø–∫–∏
        """
        keyboard = [[InlineKeyboardButton("¬´ –ù–∞–∑–∞–¥", callback_data=callback_data)]]
        return InlineKeyboardMarkup(keyboard)

    @staticmethod
    def remove_keyboard() -> dict:
        """
        –£–±—Ä–∞—Ç—å –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É (–¥–ª—è ReplyKeyboard)
        """
        from telegram import ReplyKeyboardRemove
        return {"reply_markup": ReplyKeyboardRemove()}
